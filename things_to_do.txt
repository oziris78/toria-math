


GELECEK PLANLARI {

    TMathConstants.EPSILON değeri her yerde kullanılmadı, precision arttırılmalı ve tüm framework'e yeniden bir göz atılmalı

    TFunction
        - derivative fonksiyonunda unwrapping yapmalıyız
        - toString() metodu belki bundan sonra yeniden yazılmalı olacak
        - çoğu amnfunc sınıfının constructor'ları kötü yazıldı daha düzgün kod yazılmalı
        - TPolynomial için empty constructor yazılacak, tüm yapısı yeniden daha iyi bir şekilde
            yazılabilir çoğu fonksiyon da eski zaten TArrays filan kullanılmamış

    Rastgele şeyler üretme sınıflarını oluşturmalı ve düzenlemeliyim
    {
        Rastgele sayı üretme metotları yazılmalı belki bunun için bir betik okurum

        OpenSimplexNoise elde etme zamanı

        En çok kullanılan sınıflar için rastgele nesne üreten bir sınıf yazarım, TVector2D, TPoint2D vb.

        TRandom, TNoise sınıflarını güzelce noise ve randomness hakkında bir betik okuyarak yaz
        Ayrıca OpenSimplexNoise'u doğrudan internetten alabilirim java ve unlicensed

        UniqueRandomIntGenerator intGen = new UniqueRandomIntGenerator(int min, int step, int max);
        if(intGen.hasNext())
            int x = intGen.getNext();

        TRandomString  =>  getRandString("??-###-##-?", "ABCDEF") // "AE-509-54-F" gibi bir şey
                       =>  getRandHexStr("^^:^^::^^^") // "A1:BF::FF1" gibi bir şey


    }


    Web projesi bir bakıma ama telek-math'e wiki gerekli artık...

}


TMatNM
TMat
TMatrix
TGenericMatrix



matris sınıflarının hepsi mutable olacak ve method chaining için this dönecekler

// https://www.sanfoundry.com/java-program-find-inverse-matrix/

javastr için:
    TMat2, TMat3, TMat4  =>  mutable, belirli boyut, hızlı çalışan sınıflar
    TMat                 =>  mutable, NxM boyut, yavaş ama işlevli

// fields

... fields

// constructors and copying

... constructors

TMat2 copy          =>  kendi kopyasını dönme


// getters and setters

TMat3 set(doubles ...)
void setCell
double getCell()

// special value methods

double determinant
double trace

// basic operations

TMat2 add           =>  kendi türünü ekleme, bir sürü double ekleme
TMat2 subtract      =>  kendi türünü ekleme, bir sürü double ekleme
TMat2 scale         =>  bir double
TMat2 multiply  =>  kendi türü, bir sürü double
TMat2 invert

// geometric operations

TMat2 flipHorizontally  =>  yatay olarak aynalıyor
    [1, 2]      => [2, 1]
    [3, 4]         [4, 3]
TMat2 flipVertically  =>  dikey olarak aynalıyor
    [1, 2]      => [3, 4]
    [3, 4]         [1, 2]
TMat2 rotate90DegClockwise
TMat2 rotate90DegAntiClockwise
TMat2 rotate180Deg
TMat2 transpose


// special matrix methods

boolean isSymmetrical
boolean isSingular
boolean isIdentityMatrix

// object methods

equals
toString
hashCode

TMat4 constructors:
    - TMat4()  =>  identity matrix
    - TMat4(value)  => hepsi value
    - TMat4(TMat4)  => copy constructor
    - TMat4(16 double)
TMat constructors:
    - TMat(n, m)  =>  nxm identity matrix
    - TMat(n)  =>  nxn identity matrix
    - TMat(TMat2)
    - TMat(TMat3)
    - TMat(TMat4)
    - TMat(TMat)  => copy constructor
    - TMat(double[][])
    - TMat(float[][])
    - TMat(int[][])
    - TMat(Number[][])
    - TMat(ArrayRef2???)

TMat özel:
    - checkForSquareMatrix()
    - getColSize()
    - getRowSize()
    - isSquareMatrix


Kontrol:
    == yerine TMath.areEqual() kullanılmalı
    TMat için her metot öncelikle kare matris gerekiyor mu diye kontrol etmeli


her metodun kullanıldığı büyük bir test yazılmalı

JOML vs tmath yapılmalı bir test içinde






Multivariable functions, adi dif denk nüm çözüm ekle

şu anda olanlar
f(x = x0)
df/dx
domain (range) kavramı

eklemek istediklerim
f(x = x0, y = y0) // burada x ve y bağımsız değişkenler
f(x,y) için domain kavramı (ikili domain olmalı AxB -> C)

fonksiyonlar yapılırken constructor sorunu çözülmeli
FuncParams{} diye bir sınıf tanımlayarak ve içlerine Function<FuncParams, Double> nesnesi koyarak sorunu belki çözebilirim
Bu FuncParams sınıfının içinde kaç tane parametre olduğu sayısı da depolanır hem

TRange sınıfı TInterval olarak değiştirilmeli...

TFunction gibi birden çok iç içe single var func dizen sınıfı iki boyutlu için yapmayı denerim olmazsa olmaz

fonksiyonlar bitirildikten sonra girdileri single var func ve two var func olabilen matrisler yapacağım
bunların yanında FMat3, FMat4 yapılabilir








telek-vstat{
    dot plots?
    stem and leaf plots?
    - frequency dist. table visualization
    line plots?
    - histograms
    - boxplots
    - istatistik dersinde gördüğüm her tür grafiğe bakabilirim hepsini not almamıştım sanırım
}



https://natureofcode.com/book/chapter-10-neural-networks/


